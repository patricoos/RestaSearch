@model RestaSearch.ViewModels.SzukajViewModel
@using RestaSearch.Infrastructure

@*@foreach (var lokal in Model.lo)*@
@for (var i = 0; i < Model.LokaleList.Count(); i++)
{
	<div class="card">
		<div class="card-header">
			<h4>@Model.LokaleList[i].NazwaLokalu<font color="gray"> - @Model.LokaleList[i].NazwMiejscowosc</font> </h4>
		</div>
		<div class="card-body">
			<div class="row">
				<div class="col-md-4">
					<a href="@Url.Action("Szczegoly", "Lokale", new { id = Model.LokaleList[i].LokalId })">
						<img class="img-fluid d-block" src="@Url.ObrazkiLokaliSciezka(Model.LokaleList[i].NazwaPlikuObrazka)">
					</a>
				</div>
				<div class="col-md-8">
					<h6 class="text-muted">@Model.LokaleList[i].OpisSkrocony </h6>
					<p>Odległość @Model.LokaleList[i].Dystans km</p>
					@*<p class=" p-y-1">Godziny otwarcia</p>*@
				</div>
			</div>
		</div>
	</div>
}
<div class="py-5">
	<div class="container">
		<div class="row">

			<div id="map"></div>
			


		</div>
	</div>
</div>

<style>
	/* Always set the map height explicitly to define the size of the div
	  * element that contains the map. */
	#map {
		height: 400px;
		width: 700px;
	}
</style>



<script>
				@*var CLat = "@Model.CenterLat";
	var CLong = "@Model.CenterLong";
	CLat.toString()/*.replace(",", ".")*/;
	CLong.toString()/*.replace(",", ".")*/;
				CLat = CLat.replace(/,/g, '.');
				CLong = CLong.replace(/,/g, '.');
				alert(CLong)*@

							function initMap() {
								var map = new google.maps.Map(document.getElementById('map'), {
									center: { lat: @Model.CenterLat, lng: @Model.CenterLong },
									zoom: @Model.Zoom,
									gestureHandling: 'greedy'
								});

								@if (Model.MyLat != null)
									{<text>
										var marker = new google.maps.Marker({
									position: { lat: @Model.MyLat, lng: @Model.MyLong },
									map: map,
									icon: '../Content/Images/marker-green.png',
									title: 'Tu jesteś!'
										});
									</text>

								}

							@for (var i = 0; i < Model.LokaleList.Count(); i++)
							{
								<text>
								var marker = new google.maps.Marker({
									position: { lat: @Model.LokaleList[i].Lat, lng: @Model.LokaleList[i].Long },
									map: map,
									title: '@Model.LokaleList[i].NazwaLokalu',
									snippet: '@Model.LokaleList[i].NazwMiejscowosc'
								});
								</text>
							}

				}

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDFR77SDuMS5dYX2vJmVVOq4lPAmSDI3t0&callback=initMap"
		async defer></script>